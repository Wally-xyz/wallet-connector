{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,8DAAkD;AAElD,8CAAoD;AACpD,kDAA+C;AAG/C,MAAa,cAAc;IAMzB,YAAY,EAAE,KAAK,EAAE,SAAS,EAAwC;QALtE,UAAK,GAAuB,SAAS,CAAC;QACtC,cAAS,GAAuB,SAAS,CAAC;QAS1C,iBAAY,GAAG,CAAC,SAAiB,EAAQ,EAAE;YACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC;QANA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAMD,8DAA8D;IAC9D,KAAK,CAAC,UAAU,CAAC,GAAW;QAC1B,OAAO,IAAA,iBAAO,EAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,8DAA8D;IAC9D,KAAK,CAAC,WAAW,CAAC,GAAW,EAAE,IAA8B;QAC3D,OAAO,IAAA,iBAAO,EAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,KAAa;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,KAAa,EAAE,GAAW;QACxC,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE;YACjD,KAAK;YACL,GAAG;SACJ,CAAoB,CAAC;QACtB,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CACd,8BAAC,sBAAc,IACb,YAAY,EAAE,CAAC,GAAW,EAAE,EAAE;;gBAC5B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACvB,MAAA,IAAI,CAAC,IAAI,0CAAE,OAAO,EAAE,CAAC;YACvB,CAAC,GACD,CACH,CAAC;IACJ,CAAC;CACF;AA3DD,wCA2DC","sourcesContent":["import React from \"react\";\nimport ReactDOM, { Root } from \"react-dom/client\";\n\nimport { LoginComponent } from \"./components/Login\";\nimport { request } from \"./components/request\";\nimport { VeriftOTPResult, Wallet } from \"./types\";\n\nexport class WallyConnector {\n  appId: string | undefined = undefined;\n  authToken: string | undefined = undefined;\n\n  root: Root | undefined;\n\n  constructor({ appId, authToken }: { appId: string; authToken: string }) {\n    this.appId = appId;\n    this.authToken = authToken;\n  }\n\n  setAuthToken = (authToken: string): void => {\n    this.authToken = authToken;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async requestGet(url: string): Promise<any> {\n    return request(this.authToken, \"GET\", url, undefined);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async requestPost(url: string, data?: Record<string, unknown>): Promise<any> {\n    return request(this.authToken, \"GET\", url, data);\n  }\n\n  async getOTP(email: string): Promise<Wallet[]> {\n    return this.requestPost(\"users/login\", { email });\n  }\n\n  async verifyOTP(email: string, otp: string): Promise<VeriftOTPResult> {\n    const result = this.requestPost(\"users/verifyOTP\", {\n      email,\n      otp,\n    }) as VeriftOTPResult;\n    if (result.token) {\n      this.authToken = result.token;\n    }\n    return result;\n  }\n\n  async getWallets(): Promise<Wallet[]> {\n    return this.requestGet(\"wallets\");\n  }\n\n  authorise(): void {\n    this.authToken = undefined;\n    const anchor = document.createElement(\"div\");\n    document.body.appendChild(anchor);\n\n    this.root = ReactDOM.createRoot(anchor);\n    this.root.render(\n      <LoginComponent\n        setAuthToken={(tkn: string) => {\n          this.setAuthToken(tkn);\n          this.root?.unmount();\n        }}\n      />\n    );\n  }\n}\n"]}