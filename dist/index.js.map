{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,uCAAoC;AAGpC,MAAa,cAAc;IAIzB,YAAY,EACV,KAAK,EACL,SAAS,MACiC,EAAE;QAN9C,UAAK,GAAuB,SAAS,CAAC;QACtC,cAAS,GAAuB,SAAS,CAAC;QAW1C,iBAAY,GAAG,CAAC,SAAiB,EAAQ,EAAE;YACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC;QAPA,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAMD,8DAA8D;IAC9D,KAAK,CAAC,UAAU,CAAC,GAAW,EAAE,eAAyB;QACrD,OAAO,IAAA,iBAAO,EAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;IACzE,CAAC;IAED,KAAK,CAAC,WAAW,CACf,GAAW,EACX,IAA8B,EAC9B,eAAyB;IACzB,8DAA8D;;QAE9D,OAAO,IAAA,iBAAO,EAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,KAAa;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,KAAa,EAAE,GAAW;QACxC,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAC7B,iBAAiB,EACjB;YACE,KAAK;YACL,GAAG;SACJ,EACD,KAAK,CACa,CAAC;QACrB,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAAe;QAC/B,OAAO,IAAI,CAAC,WAAW,CACrB,oBAAoB,EACpB,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAC9B,KAAK,CACN,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IAC1C,CAAC;CACF;AA7DD,wCA6DC","sourcesContent":["import { request } from \"./request\";\nimport { VeriftOTPResult, Wallet } from \"./types\";\n\nexport class WallyConnector {\n  appId: string | undefined = undefined;\n  authToken: string | undefined = undefined;\n\n  constructor({\n    appId,\n    authToken,\n  }: { appId?: string; authToken?: string } = {}) {\n    // TODO: is appId required field\n    this.appId = appId;\n    this.authToken = authToken;\n  }\n\n  setAuthToken = (authToken: string): void => {\n    this.authToken = authToken;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async requestGet(url: string, isAuthenticated?: boolean): Promise<any> {\n    return request(this.authToken, \"GET\", url, undefined, isAuthenticated);\n  }\n\n  async requestPost(\n    url: string,\n    data?: Record<string, unknown>,\n    isAuthenticated?: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> {\n    return request(this.authToken, \"POST\", url, data, isAuthenticated);\n  }\n\n  async getOTP(email: string): Promise<Wallet[]> {\n    return this.requestPost(\"users/login\", { email }, false);\n  }\n\n  async verifyOTP(email: string, OTP: string): Promise<VeriftOTPResult> {\n    const result = this.requestPost(\n      \"users/verifyOTP\",\n      {\n        email,\n        OTP,\n      },\n      false\n    ) as VeriftOTPResult;\n    if (result.token) {\n      this.authToken = result.token;\n    }\n    return result;\n  }\n\n  async signMessage(message: string): Promise<Wallet[]> {\n    return this.requestPost(\n      \"users/sign-message\",\n      { message, appId: this.appId },\n      false\n    );\n  }\n\n  async getWallets(): Promise<Wallet[]> {\n    return this.requestGet(\"users/wallets\");\n  }\n}\n"]}