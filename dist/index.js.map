{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,8DAAkD;AAElD,2CAAiD;AAEjD,2CAAuC;AAGvC,MAAa,cAAc;IAIzB,YAAY,SAAiB;QAH7B,cAAS,GAAuB,SAAS,CAAC;QAS1C,iBAAY,GAAG,CAAC,SAAiB,EAAQ,EAAE;;YACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAA,IAAI,CAAC,IAAI,0CAAE,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC;QARA,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;IACH,CAAC;IAOD,8DAA8D;IAC9D,KAAK,CAAC,UAAU,CAAC,GAAW;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACvC;QACD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,oBAAQ,GAAG,GAAG,EAAE,EAAE;YAChD,OAAO,EAAE;gBACP,aAAa,EAAE,UAAU,IAAI,CAAC,SAAS,EAAE;aAC1C;SACF,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,8BAAC,sBAAc,IAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAI,CAAC,CAAC;IACxE,CAAC;CACF;AAxCD,wCAwCC","sourcesContent":["import React from \"react\";\nimport ReactDOM, { Root } from \"react-dom/client\";\n\nimport { LoginComponent } from \"./widgets/Login\";\n\nimport { APP_ROOT } from \"./constants\";\nimport { Wallet } from \"./types\";\n\nexport class WallyConnector {\n  authToken: string | undefined = undefined;\n  root: Root | undefined;\n\n  constructor(authToken: string) {\n    if (authToken) {\n      this.authToken = authToken;\n    }\n  }\n\n  setAuthToken = (authToken: string): void => {\n    this.authToken = authToken;\n    this.root?.unmount();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async requestGet(url: string): Promise<any> {\n    if (!this.authToken) {\n      console.error(\"--- UNAUTHORISED ---\");\n    }\n    const response = await fetch(`${APP_ROOT}${url}`, {\n      headers: {\n        Authorization: `Bearer ${this.authToken}`,\n      },\n    });\n    return response.json();\n  }\n\n  async getWallets(): Promise<Wallet[]> {\n    return this.requestGet(\"wallets\");\n  }\n\n  authorise(): void {\n    this.authToken = undefined;\n    const anchor = document.createElement(\"div\");\n    document.body.appendChild(anchor);\n\n    this.root = ReactDOM.createRoot(anchor);\n    this.root.render(<LoginComponent setAuthToken={this.setAuthToken} />);\n  }\n}\n"]}