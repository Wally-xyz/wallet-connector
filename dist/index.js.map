{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,OAAO,cAAc;IACzB,YAA6B,QAAgB,EAAmB,IAA4B;QAA/D,aAAQ,GAAR,QAAQ,CAAQ;QAAmB,SAAI,GAAJ,IAAI,CAAwB;IAAG,CAAC;IAEzF,cAAc;;QACnB,MAAM,WAAW,GAAG,IAAI,eAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;QACtG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,IAAI,CAAC;YACvC,CAAC,CAAC,mCAAmC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC7D,CAAC,CAAC,oCAAoC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAC/D,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,SAAiB;QACpC,YAAY,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;IAC5D,CAAC;IAAA,CAAC;IAEM,YAAY;QAClB,OAAO,YAAY,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,iBAAiB,CAAC,MAAM,GAAG,EAAE;QACnC,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACxD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;QAED,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,MAAM,EAAE,SAAS,EAAE,EAAE;YACvD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACzD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAEK,WAAW,CAAC,OAAe;;YAC/B,MAAM,WAAW,GAAG,IAAI,eAAe,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YAChE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,0BAA0B,WAAW,EAAE,EAAE;gBAChE,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,IAAI,CAAC,YAAY,EAAE,EAAE;oBAC9C,cAAc,EAAE,kBAAkB;oBAClC,MAAM,EAAE,kBAAkB;iBAC3B;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAC9D;YACD,OAAO,MAAM,IAAI,CAAC,IAAI,EAA4B,CAAC;QACrD,CAAC;KAAA;CACF","sourcesContent":["import { SignedMessage, WallyConnectorOptions } from './types';\n\nexport class WallyConnector {\n  constructor(private readonly clientId: string, private readonly opts?: WallyConnectorOptions) {}\n\n  public loginWithEmail() {\n    const queryParams = new URLSearchParams({ clientId: this.clientId, state: this.generateStateCode() });\n    window.location.replace((this.opts?.test)\n      ? `https://api.wally.xyz/oauth/otp?${queryParams.toString()}`\n      : `https://localhost:3000/oauth/otp?${queryParams.toString()}`\n    );\n  }\n\n  private setAuthToken(authToken: string): void {\n    localStorage.setItem(`wally:${this.clientId}`, authToken);\n  };\n\n  private getAuthToken(): string | null {\n    return localStorage.getItem(`wally:${this.clientId}`);\n  }\n\n  private generateStateCode(length = 10) {\n    const chars = [];\n    for (let i = 0; i < 26; i++) {\n      chars.push(String.fromCharCode('a'.charCodeAt(0) + i));\n      chars.push(String.fromCharCode('A'.charCodeAt(0) + i));\n    }\n    for (let i = 0; i < 10; i++) {\n      chars.push('0'.charCodeAt(0) + i);\n    }\n\n    const authCode = [];\n    for (let charCount = 0; charCount < length; charCount++) {\n      const randInt = Math.floor(Math.random() * chars.length);\n      authCode.push(chars[randInt]);\n    }\n    return authCode.join('');\n  }\n\n  async signMessage(message: string): Promise<SignedMessage> {\n    const queryString = new URLSearchParams({ message }).toString();\n    const resp = await fetch(`/app/user/sign-message?${queryString}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${this.getAuthToken()}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n\n    if (!resp.ok || resp.status >= 300) {\n      throw new Error('Server returned a non-successful response');\n    }\n    return await resp.json() as Promise<SignedMessage>;\n  }\n}\n"]}