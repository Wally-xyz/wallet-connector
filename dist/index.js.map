{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AAEA,wEAA+C;AAO/C,MAAM,aAAa,GAAG,GAAG,EAAE;IACzB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACjB,OAAO,CAAC,KAAK,CACX,qEAAqE,CACtE,CAAC;QACF,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEK,MAAM,IAAI,GAAG,CAAC,OAA8B,EAAQ,EAAE;IAC3D,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;QAC7D,OAAO;KACR;IACD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,IAAI,yBAAc,CAAC,OAAO,CAAC,CAAC;IAE3D,IAAI,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE;QAC/B,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;KAC/B;IAED,OAAO;AACT,CAAC,CAAC;AAZW,QAAA,IAAI,QAYf;AAEK,MAAM,WAAW,GAAG,GAA0B,EAAE;IACrD,IAAI,CAAC,aAAa,EAAE,EAAE;QACpB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,MAAM,CAAC,KAAK,CAAC;AACtB,CAAC,CAAC;AANW,QAAA,WAAW,eAMtB;AAEK,MAAM,KAAK,GAAG,GAAkB,EAAE;IACvC,IAAI,CAAC,aAAa,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;QACjD,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;KACzB;IAED,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AAC9B,CAAC,CAAC;AANW,QAAA,KAAK,SAMhB;AAEK,MAAM,WAAW,GAAG,CAAC,OAAe,EAAQ,EAAE;IACnD,IAAI,CAAC,aAAa,EAAE,EAAE;QACpB,OAAO;KACR;IAED,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC3C,CAAC,CAAC;AANW,QAAA,WAAW,eAMtB","sourcesContent":["import { WallyConnectorOptions } from './types';\n\nimport WallyConnector from './wally-connector';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var wally: WallyConnector;\n}\n\nconst checkInjected = () => {\n  if (!window.wally) {\n    console.error(\n      \"Couldn't find wally instance. Ensure init() method is called first.\"\n    );\n    return false;\n  }\n  return true;\n};\n\nexport const init = (options: WallyConnectorOptions): void => {\n  if (typeof window === 'undefined') {\n    console.error('Ensure init() is called on the client only.');\n    return;\n  }\n  window.wally = window.wally || new WallyConnector(options);\n\n  if (window.wally.isRedirected()) {\n    window.wally.handleRedirect();\n  }\n\n  return;\n};\n\nexport const getProvider = (): WallyConnector | null => {\n  if (!checkInjected()) {\n    return null;\n  }\n\n  return window.wally;\n};\n\nexport const login = (): Promise<void> => {\n  if (!checkInjected() || window.wally.isLoggedIn()) {\n    return Promise.reject();\n  }\n\n  return window.wally.login();\n};\n\nexport const finishLogin = (address: string): void => {\n  if (!checkInjected()) {\n    return;\n  }\n\n  return window.wally.finishLogin(address);\n};\n"]}