{"version":3,"file":"auth.js","sourceRoot":"","sources":["../src/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import Messenger from './messenger';\nimport { AuthOptions, EmitterMessage, WorkerMessage } from './types';\n\nexport default class Auth {\n  // Options\n  private clientId: string;\n  private disableRedirectClose: boolean;\n  private isDevelopment: boolean;\n  private onTokenFetched?: (address: string) => void;\n  private redirectUrl?: string;\n\n  // Config\n  private host: string;\n  private messenger: Messenger;\n\n  // State\n  public isLoggingIn: boolean;\n  public selectedAddress: string;\n  private didHandleRedirect = false;\n\n  constructor({\n    authToken,\n    clientId,\n    disableRedirectClose,\n    host,\n    messenger,\n    redirectURL,\n    _isDevelopment,\n    _onTokenFetched,\n  }: AuthOptions) {\n    this.clientId = clientId;\n    this.disableRedirectClose = !!disableRedirectClose;\n    this.isDevelopment = !!_isDevelopment;\n    this.onTokenFetched = _onTokenFetched;\n    this.redirectUrl = redirectURL;\n\n    this.host = host;\n    this.messenger = messenger;\n\n    this.isLoggingIn = false;\n    this.selectedAddress = '';\n\n    if (authToken) {\n      this.setAuthToken(authToken);\n    }\n  }\n\n  public async login(email?: string): Promise<void> {\n    if (this.isLoggingIn) {\n      return Promise.reject('Already logging in.');\n    }\n    this.isLoggingIn = true;\n\n    if (!this.clientId) {\n      console.error('Please set a client ID');\n      return;\n    }\n    const state = this.generateStateCode();\n    this.saveState(state);\n    const redirectUrl = this.redirectUrl || null;\n    const queryParams = new URLSearchParams({\n      clientId: this.clientId,\n      state,\n      ...((redirectUrl && { redirectUrl }) || {}),\n      ...((email && { email }) || {}),\n    });\n\n    window.open(`${this.host}/oauth/otp?${queryParams.toString()}`, '_blank');\n\n    return new Promise((resolve, reject) => {\n      const listener = () => {\n        this.messenger.removeListener(\n          EmitterMessage.ACCOUNTS_CHANGED,\n          listener\n        );\n        resolve();\n      };\n      this.messenger.addListener(EmitterMessage.ACCOUNTS_CHANGED, listener);\n\n      const logFailure = () => {\n        console.error(\n          'Error logging in to Wally. ☹️\\nPlease refresh and try again.'\n        );\n      };\n\n      this.messenger.onWorkerMessage(WorkerMessage.LOGIN_SUCCESS, () => {\n        // TODO: This needs to use the emitter. Will fix after restructuring/splitting up.\n        if (!this.getToken()) {\n          logFailure();\n          reject();\n          return;\n        }\n        resolve();\n      });\n      this.messenger.onWorkerMessage(WorkerMessage.LOGIN_FAILURE, () => {\n        logFailure();\n        reject();\n      });\n    });\n  }\n\n  public isRedirected(): boolean {\n    return this.getState() !== null;\n  }\n\n  public async handleRedirect(): Promise<void> {\n    if (this.didHandleRedirect) {\n      return;\n    }\n    this.didHandleRedirect = true;\n\n    const storedState = this.getState();\n    const queryParams = new URLSearchParams(window.location.search);\n    if (storedState && storedState !== queryParams.get('state')) {\n      this.deleteState();\n      if (this.isDevelopment) {\n        console.error('Invalid Wally state');\n      }\n    }\n    this.deleteState();\n    const authCode = queryParams.get('authorization_code');\n\n    let resp: Response;\n    let error = null;\n\n    try {\n      resp = await fetch(`${this.host}/oauth/token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({\n          authCode,\n        }),\n      });\n\n      if (resp && resp?.ok && resp?.status < 300) {\n        const data = await resp.json();\n        this.setAuthToken(data.token);\n        this.selectedAddress = data.wallet;\n        this.onTokenFetched && this.onTokenFetched(data.wallet);\n      } else {\n        error = await resp.text();\n        console.error(\n          'The Wally server returned a non-successful response when exchanging authorization code for token'\n        );\n      }\n    } catch (err) {\n      error = err;\n      console.error(`Unable to fetch Wally access token: ${err}`);\n    }\n\n    if (error) {\n      this.deleteState();\n      this.messenger.sendWorkerMessage(WorkerMessage.LOGIN_FAILURE);\n      return;\n    }\n\n    this.messenger.sendWorkerMessage(WorkerMessage.LOGIN_SUCCESS);\n\n    if (!this.disableRedirectClose) {\n      window.setTimeout(window.close, 1000);\n    }\n  }\n\n  private setAuthToken(authToken: string): void {\n    localStorage.setItem(`wally:${this.clientId}:token`, authToken);\n  }\n\n  public getToken(): string | null {\n    return localStorage.getItem(`wally:${this.clientId}:token`);\n  }\n\n  public clearAuthToken() {\n    localStorage.removeItem(`wally:${this.clientId}:token`);\n  }\n\n  private generateStateCode(length = 10) {\n    const chars = [];\n    for (let i = 0; i < 26; i++) {\n      chars.push(String.fromCharCode('a'.charCodeAt(0) + i));\n      chars.push(String.fromCharCode('A'.charCodeAt(0) + i));\n    }\n    for (let i = 0; i < 10; i++) {\n      chars.push('0'.charCodeAt(0) + i);\n    }\n\n    const authCode = [];\n    for (let charCount = 0; charCount < length; charCount++) {\n      const randInt = Math.floor(Math.random() * chars.length);\n      authCode.push(chars[randInt]);\n    }\n    return authCode.join('');\n  }\n\n  private saveState(state: string) {\n    localStorage.setItem(`wally:${this.clientId}:state:token`, state);\n  }\n\n  private getState(): string | null {\n    return localStorage.getItem(`wally:${this.clientId}:state:token`);\n  }\n\n  private deleteState() {\n    localStorage.removeItem(`wally:${this.clientId}:state:token`);\n  }\n}\n"]}