{"version":3,"file":"wally-js.js","sourceRoot":"","sources":["../src/wally-js.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  EmitterMessage,\n  MethodNameType,\n  MethodResponse,\n  RequestObj,\n  WallyOptions,\n} from './types';\n\nimport { APP_ROOT } from './constants';\n\nimport Messenger from './messenger';\nimport Auth from './auth';\nimport Requester from './requester';\n\nclass WallyJS {\n  private auth: Auth;\n  private messenger: Messenger;\n  private requester: Requester;\n\n  constructor({\n    authToken,\n    clientId,\n    disableRedirectClose,\n    redirectURL,\n    sharedWorkerUrl,\n    verbose,\n    _devUrl,\n    _disableSharedWorker,\n    _isDevelopment,\n    _onTokenFetched,\n  }: WallyOptions) {\n    const host = (_isDevelopment && _devUrl) || APP_ROOT;\n\n    this.messenger = new Messenger({\n      sharedWorkerUrl,\n      _disableSharedWorker,\n    });\n\n    this.auth = new Auth({\n      authToken,\n      clientId,\n      disableRedirectClose,\n      redirectURL,\n      _isDevelopment,\n      _onTokenFetched,\n      host,\n      messenger: this.messenger,\n    });\n\n    this.requester = new Requester({\n      clientId,\n      verbose,\n      host,\n      auth: this.auth,\n      messenger: this.messenger,\n    });\n  }\n\n  public get selectedAddress() {\n    return this.auth.selectedAddress;\n  }\n\n  public finishLogin = (address: string): void => {\n    if (!this.auth.isLoggingIn) {\n      return;\n    }\n    this.auth.isLoggingIn = false;\n    this.messenger.emit(EmitterMessage.ACCOUNTS_CHANGED, address);\n    this.messenger.emit(EmitterMessage.CONNECTED);\n  };\n\n  public on(name: string, cb: (a?: any) => void): void {\n    this.messenger.addListener(name, cb);\n  }\n\n  public removeListener(name: string, fn: any): void {\n    this.messenger.removeListener(name, fn);\n  }\n\n  public removeAllListeners(name: string): void {\n    this.messenger.removeAllListeners(name);\n  }\n\n  public async login(email?: string): Promise<void> {\n    return this.auth.login(email);\n  }\n\n  public logout(): void {\n    this.auth.clearAuthToken();\n  }\n\n  public isRedirected(): boolean {\n    return this.auth.isRedirected();\n  }\n\n  public isLoggedIn(): boolean {\n    return !!this.auth.getToken();\n  }\n\n  public isConnected(): boolean {\n    return this.isLoggedIn();\n  }\n\n  public async handleRedirect(): Promise<void> {\n    return this.auth.handleRedirect();\n  }\n\n  public async request<T extends MethodNameType>(\n    req: RequestObj<T>\n  ): Promise<MethodResponse<T> | null> {\n    return this.requester.request(req);\n  }\n\n  /**\n   * @deprecated use on()\n   */\n  public addListener(name: string, cb: (a?: any) => void): void {\n    this.on(name, cb);\n  }\n\n  /**\n   * @deprecated - use request()\n   */\n  public async sendAsync(req: any) {\n    return this.requester.request(req);\n  }\n\n  /**\n   * @deprecated - use request({ method: 'eth_requestAccounts' }) directly\n   */\n  public async enable() {\n    return this.requester.request({ method: 'eth_requestAccounts' });\n  }\n}\n\nexport default WallyJS;\n"]}