{"version":3,"file":"wally-connector.js","sourceRoot":"","sources":["../src/wally-connector.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  WallyConnectorOptions,\n  RedirectOptions,\n  RequestObj,\n  MethodName,\n  SignedMessage,\n} from './types';\n\nimport {\n  APP_ROOT,\n  getRedirectPage,\n  getScrimElement,\n} from './constants';\n\nclass WallyConnector {\n  private clientId: string | null;\n  private host: string | null;\n  private isDevelopment: boolean;\n  public selectedAddress: string | null;\n  private didHandleRedirect: boolean;\n\n  constructor({\n    clientId,\n    isDevelopment,\n    devUrl,\n  }: WallyConnectorOptions) {\n    this.clientId = clientId;\n    this.host = isDevelopment && devUrl || APP_ROOT;\n    this.selectedAddress = null;\n    this.isDevelopment = !!isDevelopment;\n    this.didHandleRedirect = false;\n  }\n\n  public async loginWithEmail(): Promise<void> {\n    if (!this.clientId) {\n      return;\n    }\n    const state = this.generateStateCode();\n    this.saveState(state);\n    const queryParams = new URLSearchParams({ clientId: this.clientId, state });\n\n    window.open(`${this.host}/oauth/otp?${queryParams.toString()}`, '_blank');\n\n    const scrim = getScrimElement();\n    document.body.appendChild(scrim);\n\n    return new Promise((resolve) => {\n      window.addEventListener('storage', (e) => {\n        if (!this.getAuthToken()) {\n          return;\n        }\n        resolve();\n        document.body.removeChild(scrim);\n      });\n    });\n  }\n\n  public isRedirected(): boolean {\n    return this.getState() !== null;\n  }\n\n  public isLoggedIn(): boolean {\n    return !!this.getAuthToken();\n  }\n\n  public async handleRedirect({\n    closeWindow = false,\n    appendContent = false,\n  }: RedirectOptions): Promise<void> {\n    if (this.didHandleRedirect) {\n      return;\n    }\n    this.didHandleRedirect = true;\n\n    if (appendContent) {\n      document.body.appendChild(getRedirectPage());\n    }\n\n    const storedState = this.getState();\n    const queryParams = new URLSearchParams(window.location.search);\n    if (storedState && storedState !== queryParams.get('state')) {\n      this.deleteState();\n      if (this.isDevelopment) {\n        console.error('Invalid Wally state');\n      }\n    }\n    this.deleteState();\n    const authCode = queryParams.get('authorization_code');\n\n    let resp: Response;\n    try {\n      resp = await fetch(`${this.host}/oauth/token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({\n          authCode,\n        }),\n      });\n      if (resp && resp?.ok && resp?.status < 300) {\n        const data = await resp.json();\n        this.setAuthToken(data.token);\n      } else {\n        this.deleteState();\n        console.error(\n          'The Wally server returned a non-successful response when exchanging authorization code for token'\n        );\n      }\n    } catch (err) {\n      console.error(`Unable to fetch Wally access token: ${err}`);\n      this.deleteState();\n    }\n\n    if (closeWindow) {\n      window.setTimeout(window.close, 1000);\n    }\n  }\n\n  private setAuthToken(authToken: string): void {\n    localStorage.setItem(`wally:${this.clientId}:token`, authToken);\n  }\n\n  private getAuthToken(): string | null {\n    return localStorage.getItem(`wally:${this.clientId}:token`);\n  }\n\n  private generateStateCode(length = 10) {\n    const chars = [];\n    for (let i = 0; i < 26; i++) {\n      chars.push(String.fromCharCode('a'.charCodeAt(0) + i));\n      chars.push(String.fromCharCode('A'.charCodeAt(0) + i));\n    }\n    for (let i = 0; i < 10; i++) {\n      chars.push('0'.charCodeAt(0) + i);\n    }\n\n    const authCode = [];\n    for (let charCount = 0; charCount < length; charCount++) {\n      const randInt = Math.floor(Math.random() * chars.length);\n      authCode.push(chars[randInt]);\n    }\n    return authCode.join('');\n  }\n\n  private saveState(state: string) {\n    localStorage.setItem(`wally:${this.clientId}:state:token`, state);\n  }\n\n  private getState(): string | null {\n    return localStorage.getItem(`wally:${this.clientId}:state:token`);\n  }\n\n  private deleteState() {\n    localStorage.removeItem(`wally:${this.clientId}:state:token`);\n  }\n\n  async request(req: RequestObj): Promise<any> {\n    if (!this.isLoggedIn()) {\n      await this.loginWithEmail();\n    }\n\n    switch (req.method) {\n      case 'eth_requestAccounts':\n        return this.requestAccounts();\n      // TODO: figure out which name to use\n      case 'personal_sign':\n      case 'eth_sign':\n        return this.signMessage(req.params);\n      case MethodName.eth_getBalance:\n        return this._request(req.method, req.params);\n    }\n  }\n\n  async requestAccounts(): Promise<string[]> {\n    let resp: Response;\n    try {\n      resp = await fetch(`${this.host}/oauth/me`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n      });\n      if (resp && resp?.ok && resp?.status < 300) {\n        const data = await resp.json();\n        this.selectedAddress = data.address;\n        return [this.selectedAddress!];\n      } else {\n        console.error(\n          'The Wally server returned a non-successful response when fetching wallet details'\n        );\n      }\n    } catch (err) {\n      console.error(`Unable to fetch Wally wallet: ${err}`);\n    }\n    return [];\n  }\n\n  async signMessage(params: string[]): Promise<SignedMessage | string> {\n    const resp = await fetch(`${this.host}/oauth/wallet/sign-message`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.getAuthToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message: params[1],\n      }),\n    });\n\n    if (!resp.ok || resp.status >= 300) {\n      throw new Error(\n        'Wally server returned a non-successful response when signing a message'\n      );\n    }\n    const json = await resp.json();\n    return json.signature;\n  }\n\n  /**\n   * Handle other non-wally-specific methods - forwards to ethers/alchemy\n   * on the backend\n   * @param method The RPC Method\n   * @param params Arbitrary array of params\n   * @returns whatever you want it to\n   */\n  private async _request(method: string, params: string[]): Promise<any> {\n    const resp = await fetch(`${this.host}/oauth/wallet/send`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.getAuthToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        method,\n        params,\n      }),\n    });\n\n    if (!resp.ok || resp.status >= 300) {\n      throw new Error(\n        'Wally server returned a non-successful response when signing a message'\n      );\n    }\n    const body = await resp.text();\n    return body;\n  }\n}\n\nexport default WallyConnector;\n"]}